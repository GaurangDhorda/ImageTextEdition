{"version":3,"sources":["Input-Form.js","Web-Share.js","isMobile.js","App.js","serviceWorker.js","index.js"],"names":["InputForm","toBlob","close","setFields","fields","className","onClick","type","maxLength","value","pieces","onChange","e","target","size","weight","stamp","WebShare","blob","aria-hidden","console","log","navigator","share","fileArray","File","title","text","files","then","alert","catch","error","useMobileDevice","useState","isMobileOrTablet","setIsMobileOrTablet","useEffect","check","checkIsMobileOrTablet","a","userAgent","vendor","window","opera","test","substr","App","src","setSrc","model","setModel","save","setSave","setBlob","newBlob","setNewBlob","isMobile","drawImageOnCanvas","add","img","document","getElementById","canvas","width","height","getContext","drawImage","context","clearRect","font","fillStyle","fillText","fillCanvasBackgroundWithColor","color","globalCompositeOperation","fillRect","restore","htmlFor","style","id","data","toDataURL","createElement","href","download","body","appendChild","click","b","copyCanvas","copyCtx","Image","onload","URL","createObjectURL","event","fileInput","Resizer","imageFileResizer","uri","accept","hidden","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a776ef91.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst InputForm = ({toBlob ,close, setFields, fields}) =>{\r\n  //const [fields, setFields] = useState({'pieces':'', 'size':'', 'weight':'','stamp':''});\r\n\r\n  const addText = () =>{\r\n    setFields(fields);\r\n    toBlob();\r\n    close(false);\r\n  }\r\n\r\n  return(\r\n    <div className=\"modal\">\r\n    \r\n    <div className=\"form-container\">\r\n    <div className=\"close\">\r\n          <span onClick={() => close(false)}> X </span>\r\n        </div>     \r\n        <div className=\"form-field\">\r\n          <label> Pieces </label>\r\n          <input type=\"text\"  maxLength=\"8\" value={fields.pieces} onChange={(e) => setFields ( {...fields,'pieces' : e.target.value }) }  />\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label> Size </label>\r\n          <input type=\"text\"  maxLength=\"15\" value={fields.size} onChange={(e) => setFields ( {...fields,'size' :  e.target.value  }) }  />\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label> Weight </label>\r\n          <input type=\"text\"  maxLength=\"15\" value={fields.weight} onChange={(e) => setFields ( {...fields,'weight' : e.target.value  }) } />\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label> Stamp </label>\r\n          <input type=\"text\"  maxLength=\"15\" value={fields.stamp} onChange={(e) => setFields ( {...fields,'stamp' :  e.target.value }) }  />\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <button className=\"btn-primary\" onClick={addText}> add </button>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\nexport default InputForm;","import React from 'react';\r\n\r\nconst WebShare = ({blob}) => {\r\n\r\n  const handleOnClick = () =>{\r\n    console.log('web-share ', blob);\r\n    //let file = new File([blob], 'image.png' , {type: 'image/png'});\r\n    //let fileArray = [file];\r\n\r\n    if (navigator.share) {\r\n      \r\n      let file = new File([blob], \"picture.png\", {type: 'image/png'});\r\n      let fileArray = [file];\r\n\r\n      \r\n\r\n      navigator\r\n        .share({\r\n          title: \"Image Share\",\r\n          text: `Check out`,\r\n          files: fileArray\r\n        })\r\n        .then(() => {\r\n          console.log('Successfully shared');\r\n          alert('Successfully shared ');\r\n        })\r\n        .catch(error => {\r\n          console.error('Something went wrong sharing the blog', error);\r\n          alert('Something went wrong ' +  error);\r\n        });      \r\n\r\n    }\r\n  }\r\n  return(\r\n    <div>\r\n\r\n    <div className=\"webshare\">\r\n    <i className=\"fa fa-share-alt shadow\" aria-hidden=\"true\" onClick={handleOnClick}></i>\r\n      \r\n    </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WebShare;","import { useState, useEffect } from 'react';\r\n\r\nconst useMobileDevice = () => {\r\n  const [isMobileOrTablet, setIsMobileOrTablet] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const check = checkIsMobileOrTablet();\r\n    setIsMobileOrTablet(check)\r\n  }, []);\r\n\r\n\r\n  const checkIsMobileOrTablet = () => {\r\n    let check = false;\r\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera); //eslint-disable-line\r\n    console.log('from function', check);\r\n    return check;\r\n\r\n  }\r\n\r\n  return isMobileOrTablet ? [isMobileOrTablet] : '';\r\n};\r\n\r\nexport default useMobileDevice;","import React, {useState, useEffect} from \"react\";\nimport \"./style.css\";\nimport Resizer from 'react-image-file-resizer';\nimport InputForm from './Input-Form';\nimport WebShare from './Web-Share';\nimport useMobileDevice from './isMobile';\n\nexport default function App() {\n  const [src, setSrc] = useState('');\n  const [model, setModel] = useState(false);\n  const [save, setSave] = useState(false);\n  const [blob, setBlob] = useState();\n  const [newBlob ,setNewBlob] = useState();\n  const [isMobile] = useMobileDevice();\n  \n  const [fields,setFields] = useState({'pieces':'', 'size':'', 'weight':'','stamp':''});\n\n  useEffect(()=> {\n     if (src)  drawImageOnCanvas() ;\n  },[src])\n    useEffect(()=>{\n    \n    if(src) add() ;\n  },[fields])\n\n  \n\n  const drawImageOnCanvas = () =>{\n    let img = document.getElementById('img');\n                    let canvas = document.getElementById('canvas');\n                    canvas.width = img.width + 200;\n                    canvas.height = img.height;\n                    let ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0 ,0);                    \n  }\n  const fileChangedHandler = (event) => {\n    \n    var fileInput = false\n        if(event.target.files[0]) {\n            fileInput = true\n            setNewBlob(event.target.files[0]);\n        }\n        if(fileInput) {\n          setFields({'pieces' : '', 'size': '', 'weight':'', 'stamp':''});\n            Resizer.imageFileResizer(\n                event.target.files[0],\n                250,\n                250,\n                'JPEG',\n                130,\n                0,\n                uri => {\n                    \n                    setSrc(uri);\n                },\n                'base64',\n                250,\n                250,\n            );\n        }\n    }\n    const add = () =>{\n      \n      let canvas = document.getElementById('canvas');\n      let context = canvas.getContext('2d');\n      context.clearRect(0,0,canvas.width,canvas.height);\n      drawImageOnCanvas();\n      context.font = \"bold 14pt Arial\";\n      context.fillStyle = \"black\";\n      context.fillText(fields.pieces + ' pieces', canvas.width - 185, 20);\n      context.fillText('size ' + fields.size + ' inch' , canvas.width - 185, 40);\n      context.fillText('weight ' + fields.weight + ' gram', canvas.width - 185, 70);\n      context.fillText( 'stamp ' + fields.stamp, canvas.width - 185, 90);\n      //context.clearRect(canvas.width - 150, 50, canvas.width - 150,50);\n      setSave(true);\n      \n      console.log('blob ', blob);\n    }\n    const toBlob = () =>{\n      console.log('toBlob called');\n      let canvas = document.getElementById('canvas');\n      let context = canvas.getContext('2d');\n      fillCanvasBackgroundWithColor(canvas, 'white');\n      canvas.toBlob((b) => setBlob(b));\n\n      console.log('blob us ', blob);\n\n      let copyCanvas = document.getElementById('copyCanvas');\n      let copyCtx = copyCanvas.getContext('2d');\n      \n       let img = new Image();\n\n        img.onload = function(){\n          copyCanvas.width = img.width - 250;\n          copyCanvas.width += 800; \n          copyCanvas.height = img.height;\n          copyCtx.drawImage(img, 0, 0);\n          fillCanvasBackgroundWithColor(copyCanvas, 'white');\n          copyCtx.font = \"bold 32pt Arial\";\n      copyCtx.fillStyle = \"black\";\n      copyCtx.fillText(fields.pieces + ' pieces', copyCanvas.width - 540, 140);\n      copyCtx.fillText('size: ' + fields.size + ' inch' , copyCanvas.width - 540, 190);\n      copyCtx.fillText('W/G: ' + fields.weight + ' grm', copyCanvas.width - 540, 240);\n      copyCtx.fillText( 'stamp: ' + fields.stamp, copyCanvas.width - 540, 290);\n      \n      copyCanvas.toBlob((b) => setNewBlob(b));\n        }\n\n      img.src = URL.createObjectURL(newBlob);\n    }\nconst  downloadImage = ()  => {\n    let data\n    const filename = 'untitled.png';\n    let canvas = document.getElementById('canvas');\n    fillCanvasBackgroundWithColor(canvas, 'white');\n    data = canvas.toDataURL(\"image/png\", 1.0);\n    var a = document.createElement('a');\n    a.href = data;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n}\nconst fillCanvasBackgroundWithColor = (canvas, color)  => {\n  const context = canvas.getContext('2d');\n\n  // We're going to modify the context state, so it's\n  // good practice to save the current state first.\n  context.save();\n\n  // Normally when you draw on a canvas, the new drawing\n  // covers up any previous drawing it overlaps. This is\n  // because the default `globalCompositeOperation` is\n  // 'source-over'. By changing this to 'destination-over',\n  // our new drawing goes behind the existing drawing. This\n  // is desirable so we can fill the background, while leaving\n  // the chart and any other existing drawing intact.\n  // Learn more about `globalCompositeOperation` here:\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  context.globalCompositeOperation = 'destination-over';\n\n  // Fill in the background. We do this by drawing a rectangle\n  // filling the entire canvas, using the provided color.\n  context.fillStyle = color;\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  //context.fillRect(canvas.width - 350, canvas.height, canvas.width, canvas.height);\n\n  // Restore the original context state from `context.save()`\n  context.restore();\n}\n  return (\n    <div>\n      <h3>Image Text Edition file / </h3>\n      {(isMobile  && save) && <WebShare blob={newBlob} /> }\n       \n      <div className=\"input-label\">\n      <label htmlFor=\"fileUpload\" className=\"btn-primary\"> Open File </label>\n      <div className=\"input-label-action-button\">\n\n       {src && <button className=\"btn-primary btn-text\" onClick={() => setModel(true)} style={{'marginRight':'0.5em', 'backgroundColor':'green'}}> Add Text </button>} \n       {save && <button id=\"save\" className=\"btn-primary btn-save\" style={{'backgroundColor':'blue'}} onClick={downloadImage}> save </button>} \n        \n       { model && <InputForm toBlob={toBlob} close = {setModel} setFields={setFields} fields={fields} /> } \n      </div>\n    </div>\n      <input id=\"fileUpload\" type=\"file\" onChange = {fileChangedHandler} accept=\"image/*\" hidden />\n      <img id ='img' src = {src} hidden  />\n      <canvas id=\"copyCanvas\" hidden  />\n      <div className=\"canvas-container\">\n          {src ? ( \n              <canvas id=\"canvas\" className=\"canvas\"> </canvas>\n              \n          ) : ''\n          }\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  \n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register ();"],"sourceRoot":""}